{
  fieldInBaseClass:`Overridden Value`,
  treeMap:{
    key1:`value1`
  },
  linkedList1:[
    `value1`
  ],
  intField:100,
  floatField:1.4,
  charField:`A`,
  booleanField:false,
  strField:`String1: '"`,
  dateField:`1970-01-01T03:23:32.121Z`,
  bean2:{
    enumField:`value2`,
    enumField2:12345,
    strEnum:`strEnumV1`,
    enumSet:[
      `value1`,
      `value2`
    ],
    enumMap:{
      value1:`MapValue1`
    },
    testBean:{
      $ref:`../../`
    }
  },
  ints:[
    4,
    3,
    2,
    1
  ],
  bean2s:[
    {
      strField:`1`,
      enumSet:[
        `value1`,
        `value2`
      ],
      enumMap:{}
    },
    {
      strField:`2`,
      enumSet:[
        `value1`,
        `value2`
      ],
      enumMap:{}
    }
  ],
  readonlyField:`This's a readonly field`,
  atomicInteger:1001,
  bigInteger:`123456789012345678901234567890`,
  someClass:`java.util.Date`,
  xmlCalendar:`1970-01-01T00:00:00.000Z`,
  dateNumberMap:[
    null
  ],
  publicLinkedList:[
    `value1`
  ],
  publicTreeMap:{
    key1:`value1`
  },
  publicStrField:`PublicString`,
  publicMap:{
    key1:`1970-01-01T00:00:00.000Z`,
    key2:`1970-01-01T00:20:12.121Z`
  },
  publicBigDecimal1:`123456789012345678901234567`,
  publicBigDecimal2:`12`,
  publicInts:[
    4,
    3,
    2,
    1
  ],
  bean2List:[
    {
      strField:`AAA`,
      enumSet:[
        `value1`,
        `value2`
      ],
      enumMap:{}
    },
    {
      strField:`BBB`,
      enumSet:[
        `value1`,
        `value2`
      ],
      enumMap:{}
    }
  ],
  publicStringSet:[
    `str1`,
    `str2`
  ]
}